* CREATE
inst
new: comp 1 1 32205 "dummy control" 3 0 5000
attr 195
perm 90
bhvr 0
accg 3
elas 0
fric 100
puhl -1 45 10
* Get creator positioning
setv va00 game "CreatorX"
setv va01 game "CreatorY"
* If no values then assume this is C3 only
doif va00 eq 0 and va01 eq 0
  * Move it to a safe C3 location (just above the incubator area)
  setv va00 rand 1400 1550
  setv va01 400
  endi
pat: butt 1 "dummy control" 1 2 28 32 0 [] 1000 1
pat: butt 2 "dummy control" 3 1 68 10 0 [] 1001 0
pat: butt 3 "dummy control" 3 1 68 41 0 [] 1002 0
part 1
pose 1
part 0
pose 0
mvsf va00 va01
tick 1

* TIMER
scrp 1 1 32205 9
  * Can't seem to get this to work in at creation so do it here instead
  tick 0
  setv ov01 0
  * Check state of dummy - already free?
  enum 2 21 21
    doif attr ne 4
      targ ownr
      part 1
      pose 0
      part 0
      setv ov01 1
    endi
  next
endm

* MOVEABLE BUTTON
scrp 1 1 32205 1001
  lock
  doif ov01 eq 0
    setv ov01 1
    snde "1bep"
    * If the dummy is dropped in the containment chamber then teleported back it seems to generate an invalid map position error - no idea why.  Should be safe to recreate it first every time.
   ject "training dummy.cos" 7
    enum 2 21 21
      * Make it jump
      velo rand -5 5 rand -5 -10
      attr 198
      fric 100
      accg 3
      elas 0
    next
    targ ownr
    part 1
    pose 0
    part 0
  endi
endm

* FIXED BUTTON
scrp 1 1 32205 1002
  lock
  doif ov01 eq 1
    setv ov01 0
    snde "1bep"
    enum 2 21 21
      attr 4
      * Fade out
      snde "pl_1"
      setv va01 0
      loop
        inst
        alph va01 1
        addv va01 8
        slow
      untl va01 gt 256
      * Move back to original position
      inst
      alph 256 1
      mvto 4630 9480
      alph 256 1
      slow
      * Fade in
      snde "pl_1"
      setv va01 256
      loop
        inst
        alph va01 1
        subv va01 8
        slow
      untl va01 lt 0
      alph 0 0
    next
    targ ownr
    part 1
    pose 1
    part 0
  endi
endm

* DESTROY
rscr
  enum 1 1 32205
    kill targ
  next
  scrx 1 1 32205 9
  scrx 1 1 32205 1001
  scrx 1 1 32205 1002
