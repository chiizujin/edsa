iscr
  lock
  new: comp 2 21 1102 "interporter" 9 72 2000
  attr 195
  bhvr 41
  puhl 0 22 5
  elas 50
  accg 3
  perm 60

  anim [1]
  pat: butt 1 "interporter" 81 2 17 17 0 [] 1000 1
  part 1
  anim [1]
  part 0

  seta va10 targ

  new: comp 3 2 1003 "interporter" 14 0 1000
  attr 48
  bhvr 0
  puhl 1 95 140
  elas 50
  accg 3
  perm 60
  frel va10
  flto 0 0

  seta va11 targ
  seta ov20 va10
  targ va10
  seta ov00 va11
  targ va11

  pat: butt 1 "interporter" 16 2 72 141 0 [] 1000 1
  pat: butt 2 "interporter" 18 3 91 136 0 [] 1001 1
  pat: butt 3 "interporter" 21 3 109 135 0 [] 1002 1
  pat: butt 4 "interporter" 33 10 132 141 0 [] 1003 1
  pat: butt 5 "interporter" 24 3 69 155 0 [] 1004 1
  pat: butt 6 "interporter" 27 3 79 153 0 [] 1005 1
  pat: butt 7 "interporter" 30 3 87 152 0 [] 1006 1
  pat: butt 8 "interporter" 43 4 105 152 0 [] 1007 1
  pat: butt 9 "interporter" 47 9 120 152 0 [] 1008 1
  pat: butt 10 "interporter" 14 2 46 159 0 [] 1009 1
  pat: butt 11 "interporter" 83 3 56 159 0 [] 1011 1
  pat: butt 12 "interporter" 86 3 63 156 0 [] 1012 1

  prt: inew 0 "Input" "Interporter Input Port" 164 162 1010

  setv va00 game "CreatorX"
  setv va01 game "CreatorY"

  doif va00 eq 0 and va01 eq 0
    setv va00 5440
    setv va01 3580
  endi

  targ va10
  mvsf va00 va01
  velo rand 10 20 -5
  targ va11
  seta va02 targ

  new: simp 3 9 1008 "interporter-portal" 35 0 999
  seta ov00 va02
  setv ov01 0
  attr 48
  bhvr 0
  frel va02
  flto 42 25
  tint 70 70 255 128 128
  setv ov02 0
  seta va03 targ
  targ va02
  seta ov11 va03

  new: simp 2 2 1018 "interporter-portal" 35 0 999
  seta ov00 va02
  setv ov01 0
  attr 48
  bhvr 0
  frel va02
  flto 42 25
  tint 70 70 255 128 128
  setv ov02 0
  seta va03 targ
  targ va02
  seta ov12 va03
endm

scrp 2 21 1102 1
  *Activate 1
  doif carr ne null
    stop
  endi
  sndc "snap"
  part 1
  anim [0]
  part 0
  anim [2 3 4 5 6 7 8]
  over
  setv va00 posx
  setv va01 posy
  subv va01 110
  mvsf va00 va01
  anim [7 6 5 4 3 2 1]
  velo rand -20 20 -5
  anim [1]
  part 1
  anim [1]
  stim writ from 90 1
  stim writ from 97 1
endm

scrp 2 21 1102 1000
  *Expand
  inst
  lock
  setv va00 posx
  setv va01 posy
  subv va00 110
  subv va01 134

  targ mv00
  attr 210
  bhvr 0
  mvsf va00 va01

  targ ownr
  sndc "fp_2"
  part 1
  anim [0]
  part 0
  anim [2 3 4 5]
  over
  targ mv00
  anim [13 12 11 10 9 8 7 6 5 4 3 2 1]
  targ ownr
  anim [0]
  attr 48
  bhvr 0
  frel mv00
  flto 90 134
  targ mv00
  over

  part 1
  anim [1]
  part 2
  anim [2]
  part 3
  setv va02 ov01
  addv va02 1
  anms vtos va02
  part 4
  setv va02 ov02
  addv va02 1
  anms vtos va02
  part 5
  doif ov03 eq 1
    anim [1]
  else
    anim [2]
  endi
  part 6
  doif ov04 eq 1
    anim [1]
  else
    anim [2]
  endi
  part 7
  doif ov05 eq 1
    anim [1]
  else
    anim [2]
  endi
  part 8
  setv va02 ov06
  addv va02 1
  doif ov07 eq 7
    setv va02 0
  endi
  anms vtos va02
  part 9
  setv va02 ov07
  addv va02 1
  anms vtos va02
  part 10
  anim [1]
  part 11
  doif ov21 eq 1
    anim [1]
  else
    anim [2]
  endi
  part 12
  doif ov22 eq 1
    anim [1]
  else
    anim [2]
  endi
endm

scrp 3 2 1003 10
  setv mv00 0
  setv mv01 0
  setv mv02 0
  setv mv03 1
  setv mv04 1
  setv mv05 1
  setv mv06 0
  setv mv07 7
  setv mv08 0
  setv mv21 1
  setv mv22 1
  seta mv10 null
endm

scrp 3 2 1003 1000
  *Teleport
  sndc "beep"
  doif mv08 eq 1
    mesg wrt+ mv10 1000 null 0 0
  endi
endm

scrp 3 2 1003 1001
  *On/Off
  *lock
  sndc "beep"
  part 2
  doif mv00 eq 0
    anim [1]
    setv mv00 1
  else
    anim [2]
    setv mv00 0
  endi
  call 1021 0 0
endm

scrp 3 2 1003 1002
  *Portal/Door
  inst
  lock
  sndc "beep"
  part 3
  doif mv01 eq 0
    anim [2]
    setv mv01 1
  else
    anim [1]
    setv mv01 0
  endi
  doif mv08 eq 1
    call 1023 mv02 0
    call 1022 mv02 0
  endi
endm

scrp 3 2 1003 1003
  *Color
  inst
  lock
  sndc "beep"
  part 4
  doif mv02 eq 8
    setv mv02 0
  else
    addv mv02 1
  endi
  call 1020 0 0
endm

scrp 3 2 1003 1011
  *Male
  sndc "beep"
  part 11
  doif mv21 eq 0
    anim [1]
    setv mv21 1
  else
    anim [2]
    setv mv21 0
  endi
endm

scrp 3 2 1003 1012
  *Female
  sndc "beep"
  part 12
  doif mv22 eq 0
    anim [1]
    setv mv22 1
  else
    anim [2]
    setv mv22 0
  endi
endm

scrp 3 2 1003 1004
  *Norn
  sndc "beep"
  part 5
  doif mv03 eq 0
    anim [1]
    setv mv03 1
  else
    anim [2]
    setv mv03 0
  endi
endm

scrp 3 2 1003 1005
  *Ettin
  sndc "beep"
  part 6
  doif mv04 eq 0
    anim [1]
    setv mv04 1
  else
    anim [2]
    setv mv04 0
  endi
endm

scrp 3 2 1003 1006
  *Grendel
  sndc "beep"
  part 7
  doif mv05 eq 0
    anim [1]
    setv mv05 1
  else
    anim [2]
    setv mv05 0
  endi
endm

scrp 3 2 1003 1007
  *Sign
  part 8
  doif mv07 ne 7
    sndc "beep"
    doif mv06 eq 2
      setv mv06 0
    else
      addv mv06 1
    endi
    setv va00 mv06
    addv va00 1
    anms vtos va00
  endi
endm

scrp 3 2 1003 1008
  *Age
  part 9
  sndc "beep"
  doif mv07 eq 7
    setv mv07 0
  else
    addv mv07 1
  endi
  setv va00 mv07
  addv va00 1
  anms vtos va00

  part 8
  doif mv07 eq 7
    anim [0]
  else
    setv va00 mv06
    addv va00 1
    anms vtos va00
  endi
endm

scrp 3 2 1003 1009
  *Collapse
  inst
  lock

  doif mv00 eq 1
    call 1001 0 0
  endi

  setv va00 posx
  setv va01 posy
  subv va00 20
  addv va01 60

  targ mv20
  attr 195
  bhvr 41
  mvsf va00 va01

  targ ownr
  part 1
  anim [0]
  part 2
  anim [0]
  part 3
  anim [0]
  part 4
  anim [0]
  part 5
  anim [0]
  part 6
  anim [0]
  part 7
  anim [0]
  part 8
  anim [0]
  part 9
  anim [0]
  part 10
  anim [0]
  part 11
  anim [0]
  part 12
  anim [0]
  part 0
  sndc "fp_2"
  anim [2 3 4 5 6 7 8 9 10 11 12 13]
  over
  targ mv20
  anim [5 4 3 2 1]
  targ ownr
  anim [0]
  attr 48
  bhvr 0
  frel mv20
  flto 0 0
  targ mv20
  over
  part 1
  anim [1]
endm

scrp 3 2 1003 1010
  *Port Signal
  doif _P1_ ne 0 and mv08 eq 1
    doif type _P1_ eq 7
      mesg wrt+ mv10 1000 _P1_ 0 0
    else
      mesg wrt+ mv10 1000 null 0 0
    endi
  endi
endm

scrp 3 2 1003 1020
  *Set color
  inst
  lock
  part 4
  setv va00 mv02
  addv va00 1
  anms vtos va00
  call 1021 0 0
  doif mv08 eq 1
    call 1024 0 0
  endi
endm

scrp 3 2 1003 1021
  *Activate/Deactivate Portals
  inst
  lock
  doif mv00 eq 0 and mv08 eq 1
    call 1023 0 0
  endi
  setv va00 0
  setv va01 0
  setv va02 0
  setv va03 0
  setv va04 0
  setv va05 0
  setv va06 0
  setv va07 0
  setv va08 0
  setv va09 0

  enum 3 2 1003
    doif ov00 ne 0
      addv va09 1
      doif ov02 eq 0
        addv va00 1
      endi
      doif ov02 eq 1
        addv va01 1
      endi
      doif ov02 eq 2
        addv va02 1
      endi
      doif ov02 eq 3
        addv va03 1
      endi
      doif ov02 eq 4
        addv va04 1
      endi
      doif ov02 eq 5
        addv va05 1
      endi
      doif ov02 eq 6
        addv va06 1
      endi
      doif ov02 eq 7
        addv va07 1
      endi
      doif ov02 eq 8
        addv va08 1
      endi
    endi
  next
  enum 3 2 1003
    doif ov00 ne 0
      doif ov02 eq 0
        doif va00 gt 1 or va08 ge 1
          doif ov08 ne 1
            doif targ eq ownr
              call 1022 0 0
            else
              mesg wrt+ targ 1022 0 0 0
            endi
          endi
        else
          doif ov08 eq 1
            doif targ eq ownr
              call 1023 0 0
            else
              mesg wrt+ targ 1023 0 0 0
            endi
          endi
        endi
      endi
      doif ov02 eq 1
        doif va01 gt 1 or va08 ge 1
          doif ov08 ne 1
            doif targ eq ownr
              call 1022 1 0
            else
              mesg wrt+ targ 1022 1 0 0
            endi
          endi
        else
          doif ov08 eq 1
            doif targ eq ownr
              call 1023 1 0
            else
              mesg wrt+ targ 1023 1 0 0
            endi
          endi
        endi
      endi
      doif ov02 eq 2
        doif va02 gt 1 or va08 ge 1
          doif ov08 ne 1
            doif targ eq ownr
              call 1022 2 0
            else
              mesg wrt+ targ 1022 2 0 0
            endi
          endi
        else
          doif ov08 eq 1
            doif targ eq ownr
              call 1023 2 0
            else
              mesg wrt+ targ 1023 2 0 0
            endi
          endi
        endi
      endi
      doif ov02 eq 3
        doif va03 gt 1 or va08 ge 1
          doif ov08 ne 1
            doif targ eq ownr
              call 1022 3 0
            else
              mesg wrt+ targ 1022 3 0 0
            endi
          endi
        else
          doif ov08 eq 1
            doif targ eq ownr
              call 1023 3 0
            else
              mesg wrt+ targ 1023 3 0 0
            endi
          endi
        endi
      endi
      doif ov02 eq 4
        doif va04 gt 1 or va08 ge 1
          doif ov08 ne 1
            doif targ eq ownr
              call 1022 4 0
            else
              mesg wrt+ targ 1022 4 0 0
            endi
          endi
        else
          doif ov08 eq 1
            doif targ eq ownr
              call 1023 4 0
            else
              mesg wrt+ targ 1023 4 0 0
            endi
          endi
        endi
      endi
      doif ov02 eq 5
        doif va05 gt 1 or va08 ge 1
          doif ov08 ne 1
            doif targ eq ownr
              call 1022 5 0
            else
              mesg wrt+ targ 1022 5 0 0
            endi
          endi
        else
          doif ov08 eq 1
            doif targ eq ownr
              call 1023 5 0
            else
              mesg wrt+ targ 1023 5 0 0
            endi
          endi
        endi
      endi
      doif ov02 eq 6
        doif va06 gt 1 or va08 ge 1
          doif ov08 ne 1
            doif targ eq ownr
              call 1022 6 0
            else
              mesg wrt+ targ 1022 6 0 0
            endi
          endi
        else
          doif ov08 eq 1
            doif targ eq ownr
              call 1023 6 0
            else
              mesg wrt+ targ 1023 6 0 0
            endi
          endi
        endi
      endi
      doif ov02 eq 7
        doif va07 gt 1 or va08 ge 1
          doif ov08 ne 1
            doif targ eq ownr
              call 1022 7 0
            else
              mesg wrt+ targ 1022 7 0 0
            endi
          endi
        else
          doif ov08 eq 1
            doif targ eq ownr
              call 1023 7 0
            else
              mesg wrt+ targ 1023 7 0 0
            endi
          endi
        endi
      endi
      doif ov02 eq 8
        doif va09 gt 1
          doif ov08 ne 1
            doif targ eq ownr
              call 1022 8 0
            else
              mesg wrt+ targ 1022 8 0 0
            endi
          endi
        else
          doif ov08 eq 1
            doif targ eq ownr
              call 1023 8 0
            else
              mesg wrt+ targ 1023 8 0 0
            endi
          endi
        endi
      endi
    endi
  next
endm

scrp 3 2 1003 1022
  *create portal
  *Portal 3 : 9 : 1008
  *Door 2 : 2 : 1018
  inst
  lock

  doif mv01 eq 0
    seta mv10 mv11
  else
    seta mv10 mv12
  endi

  targ mv10
  setv ov01 mv02

  doif mv02 ne 8
    doif mv02 eq 0
      setv va03 70
      setv va04 70
      setv va05 255
    endi
    doif mv02 eq 1
      setv va03 150
      setv va04 80
      setv va05 255
    endi
    doif mv02 eq 2
      setv va03 255
      setv va04 80
      setv va05 200
    endi
    doif mv02 eq 3
      setv va03 255
      setv va04 50
      setv va05 50
    endi
    doif mv02 eq 4
      setv va03 255
      setv va04 160
      setv va05 40
    endi
    doif mv02 eq 5
      setv va03 230
      setv va04 230
      setv va05 40
    endi
    doif mv02 eq 6
      setv va03 150
      setv va04 230
      setv va05 40
    endi
    doif mv02 eq 7
      setv va03 130
      setv va04 230
      setv va05 230
    endi

    doif ov02 ne mv02
      tint va03 va04 va05 128 128
      setv ov02 mv02
    endi
  else
    doif ov02 ne mv02
      tint 128 128 128 128 128
      setv ov02 mv02
    endi
  endi

  attr 32
  bhvr 1

  targ ownr
  pat: butt 13 "interporter" 56 16 0 0 10 [] 0 1
  part 13
  sndc "fp_2"
  anim [1 2 3 4 5 6 7 8]
  over
  anim [9 10 11 12 13 14 15]

  targ mv10
  doif mv02 eq 8
    anim [20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 255 4]
  else
    anim [1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 255 4]
  endi
  targ ownr
  part 13
  over
  pat: kill 13
  setv mv08 1
endm

scrp 3 2 1003 1023
  *destroy portal
  inst
  lock
  sndc "snap"
  targ mv10
  doif mv02 eq 8
    anim [22 21 20 19]
  else
    anim [3 2 1 0]
  endi
  over
  attr 48
  bhvr 0
  setv mv08 0
endm

scrp 3 2 1003 1024
  *update portal color
  inst
  lock

  doif mv01 eq 0
    seta mv10 mv11
  else
    seta mv10 mv12
  endi

  targ mv10
  doif mv02 eq 0
    setv va03 70
    setv va04 70
    setv va05 255
  endi
  doif mv02 eq 1
    setv va03 150
    setv va04 80
    setv va05 255
  endi
  doif mv02 eq 2
    setv va03 255
    setv va04 80
    setv va05 200
  endi
  doif mv02 eq 3
    setv va03 255
    setv va04 50
    setv va05 50
  endi
  doif mv02 eq 4
    setv va03 255
    setv va04 160
    setv va05 40
  endi
  doif mv02 eq 5
    setv va03 230
    setv va04 230
    setv va05 40
  endi
  doif mv02 eq 6
    setv va03 150
    setv va04 230
    setv va05 40
  endi
  doif mv02 eq 7
    setv va03 130
    setv va04 230
    setv va05 230
  endi
  doif mv02 eq 8
    setv va03 128
    setv va04 128
    setv va05 128
  endi

  doif mv02 eq 8
    anim [23 24 25 26 27 28 29 30 31 32 33 34 255 1]
  else
    tint va03 va04 va05 128 128
    anim [4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 255 1]
  endi
  setv ov01 mv02
  setv ov02 mv02
endm

scrp 3 9 1008 1
  *Creature activates warp
  targ ov00
  doif carr eq null
    targ ownr
    call 1000 from 0
  endi
endm

scrp 3 9 1008 9
  *Timer re-enable portal
  inst
  lock
  tick 0
  attr 32
  bhvr 1
endm

scrp 3 9 1008 1000
  *warp activate event
  inst
  lock
  targ mv00
  setv va00 ov02
  setv va01 ov03
  setv va02 ov04
  setv va03 ov05
  setv va04 ov06
  setv va05 ov07
  setv va06 ov21
  setv va07 ov22
  setv va10 1

  doif crea _P1_ eq 1
    targ _P1_
    doif carr ne null
      setv va10 0
    endi
    doif spcs eq 1 and va06 eq 0
      setv va10 0
    endi
    doif spcs eq 2 and va07 eq 0
      setv va10 0
    endi
    doif fmly eq 4 and gnus eq 1 and va01 eq 0
      setv va10 0
    endi
    doif gnus eq 3 or gnus eq 4 and fmly eq 4 and va02 eq 0
      setv va10 0
    endi
    doif gnus eq 2 or gnus eq 4 and fmly eq 4 and va03 eq 0
      setv va10 0
    endi
    doif va05 ne 7
      doif va04 eq 0 and cage ge va05
        setv va10 0
      endi
      doif va04 eq 1 and cage le va05
        setv va10 0
      endi
      doif va04 eq 2 and cage ne va05
        setv va10 0
      endi
    endi

    doif va10 ne 1
      stop
    endi
  else
    setv va10 1
    setv va11 0
    targ ownr
    etch 4 0 0
      doif carr ne null
        setv va10 0
      endi
      doif spcs eq 1 and va06 eq 0
        setv va10 0
      endi
      doif spcs eq 2 and va07 eq 0
        setv va10 0
      endi
      doif fmly eq 4 and gnus eq 1 and va01 eq 0
        setv va10 0
      endi
      doif gnus eq 3 or gnus eq 4 and fmly eq 4 and va02 eq 0
        setv va10 0
      endi
      doif gnus eq 2 or gnus eq 4 and fmly eq 4 and va03 eq 0
        setv va10 0
      endi
      doif va04 eq 0 and cage ge va05
        setv va10 0
      endi
      doif va04 eq 1 and cage le va05
        setv va10 0
      endi
      doif va04 eq 2 and cage ne va05
        setv va10 0
      endi
      doif va10 eq 1
        addv va11 1
      endi
    next
    setv va12 rand 1 va11
    setv va11 0
    seta va13 null
    etch 4 0 0
      doif carr ne null
        setv va10 0
      endi
      doif spcs eq 1 and va06 eq 0
        setv va10 0
      endi
      doif spcs eq 2 and va07 eq 0
        setv va10 0
      endi
      doif fmly eq 4 and gnus eq 1 and va01 eq 0
        setv va10 0
      endi
      doif gnus eq 3 or gnus eq 4 and fmly eq 4 and va02 eq 0
        setv va10 0
      endi
      doif gnus eq 2 or gnus eq 4 and fmly eq 4 and va03 eq 0
        setv va10 0
      endi
      doif va04 eq 0 and cage ge va05
        setv va10 0
      endi
      doif va04 eq 1 and cage le va05
        setv va10 0
      endi
      doif va04 eq 2 and cage ne va05
        setv va10 0
      endi
      doif va10 eq 1
        addv va11 1
        doif va11 eq va12
          seta va13 targ
        endi
      endi
    next
    doif va13 eq null
      stop
    endi
    targ va13
  endi

  seta va20 targ
  seta va40 null
  setv va30 0

  doif va00 eq 8
    enum 3 2 1003
      doif targ ne mv00 and ov08 eq 1 and carr eq null
        addv va30 1
      endi
    next
    doif va30 gt 0
      setv va31 rand 1 va30
      setv va30 0
      enum 3 2 1003
        doif targ ne mv00 and ov08 eq 1 and carr eq null
          addv va30 1
          doif va30 eq va31
            seta va40 ov10
          endi
        endi
      next
    endi
  else
    enum 3 2 1003
      doif ov02 eq mv01 or ov02 eq 8 and targ ne mv00 and ov08 eq 1 and carr eq null
        addv va30 1
      endi
    next
    doif va30 gt 0
      setv va31 rand 1 va30
      setv va30 0
      enum 3 2 1003
        doif ov02 eq mv01 or ov02 eq 8 and targ ne mv00 and ov08 eq 1 and carr eq null
          addv va30 1
          doif va30 eq va31
            seta va40 ov10
          endi
        endi
      next
    endi
  endi

  doif va40 ne null
    targ va40
    attr 48
    bhvr 0
    tick 60
    setv va32 posx
    setv va33 posy
    targ va20
    doif va65 eq va66 and va25 eq 1
      stim writ _P1_ 96 1
    elif va25 eq 1
      stim writ _P1_ 95 1
    else
      stim writ _P1_ 27 1
    endi
    doif crea targ eq 1
      snde "tele"
      mvft va32 va33
      targ va40
      snde "tele"
    endi
  endi
endm

scrp 2 2 1018 1
  *Creature activates door
  targ ov00
  doif carr eq null
    targ ownr
    call 1000 from 0
  endi
endm

scrp 2 2 1018 9
  *Timer re-enable door
  inst
  lock
  tick 0
  attr 32
  bhvr 1
endm

scrp 2 2 1018 1000
  *door activate event
  inst
  lock
  targ mv00
  setv va00 ov02
  setv va01 ov03
  setv va02 ov04
  setv va03 ov05
  setv va04 ov06
  setv va05 ov07
  setv va06 ov21
  setv va07 ov22
  setv va10 1

  doif crea _P1_ eq 1
    targ _P1_
    doif carr ne null
      setv va10 0
    endi
    doif spcs eq 1 and va06 eq 0
      setv va10 0
    endi
    doif spcs eq 2 and va07 eq 0
      setv va10 0
    endi
    doif fmly eq 4 and gnus eq 1 and va01 eq 0
      setv va10 0
    endi
    doif gnus eq 3 or gnus eq 4 and fmly eq 4 and va02 eq 0
      setv va10 0
    endi
    doif gnus eq 2 or gnus eq 4 and fmly eq 4 and va03 eq 0
      setv va10 0
    endi
    doif va05 ne 7
      doif va04 eq 0 and cage ge va05
        setv va10 0
      endi
      doif va04 eq 1 and cage le va05
        setv va10 0
      endi
      doif va04 eq 2 and cage ne va05
        setv va10 0
      endi
    endi
    doif va10 ne 1
      stop
    endi
  else
    setv va10 1
    setv va11 0
    targ ownr
    etch 4 0 0
      doif carr ne null
        setv va10 0
      endi
      doif spcs eq 1 and va06 eq 0
        setv va10 0
      endi
      doif spcs eq 2 and va07 eq 0
        setv va10 0
      endi
      doif fmly eq 4 and gnus eq 1 and va01 eq 0
        setv va10 0
      endi
      doif gnus eq 3 or gnus eq 4 and fmly eq 4 and va02 eq 0
        setv va10 0
      endi
      doif gnus eq 2 or gnus eq 4 and fmly eq 4 and va03 eq 0
        setv va10 0
      endi
      doif va04 eq 0 and cage ge va05
        setv va10 0
      endi
      doif va04 eq 1 and cage le va05
        setv va10 0
      endi
      doif va04 eq 2 and cage ne va05
        setv va10 0
      endi
      doif va10 eq 1
        addv va11 1
      endi
    next
    setv va12 rand 1 va11
    setv va11 0
    seta va13 null
    etch 4 0 0
      doif carr ne null
        setv va10 0
      endi
      doif spcs eq 1 and va06 eq 0
        setv va10 0
      endi
      doif spcs eq 2 and va07 eq 0
        setv va10 0
      endi
      doif fmly eq 4 and gnus eq 1 and va01 eq 0
        setv va10 0
      endi
      doif gnus eq 3 or gnus eq 4 and fmly eq 4 and va02 eq 0
        setv va10 0
      endi
      doif gnus eq 2 or gnus eq 4 and fmly eq 4 and va03 eq 0
        setv va10 0
      endi
      doif va04 eq 0 and cage ge va05
        setv va10 0
      endi
      doif va04 eq 1 and cage le va05
        setv va10 0
      endi
      doif va04 eq 2 and cage ne va05
        setv va10 0
      endi
      doif va10 eq 1
        addv va11 1
        doif va11 eq va12
          seta va13 targ
        endi
      endi
    next
    doif va13 eq null
      stop
    endi
    targ va13
  endi

  seta va20 targ
  seta va40 null
  setv va30 0

  doif va00 eq 8
    enum 3 2 1003
      doif targ ne mv00 and ov08 eq 1 and carr eq null
        addv va30 1
      endi
    next
    doif va30 gt 0
      setv va31 rand 1 va30
      setv va30 0
      enum 3 2 1003
        doif targ ne mv00 and ov08 eq 1 and carr eq null
          addv va30 1
          doif va30 eq va31
            seta va40 ov10
          endi
        endi
      next
    endi
  else
    enum 3 2 1003
      doif ov02 eq mv01 or ov02 eq 8 and targ ne mv00 and ov08 eq 1 and carr eq null
        addv va30 1
      endi
    next
    doif va30 gt 0
      setv va31 rand 1 va30
      setv va30 0
      enum 3 2 1003
        doif ov02 eq mv01 or ov02 eq 8 and targ ne mv00 and ov08 eq 1 and carr eq null
          addv va30 1
          doif va30 eq va31
            seta va40 ov10
          endi
        endi
      next
    endi
  endi

  doif va40 ne null
    targ va40
    attr 48
    bhvr 0
    tick 60
    setv va32 posx
    setv va33 posy
    targ va20
    doif crea targ eq 1
      snde "tele"
      chem 157 -0.2
      mvft va32 va33
      targ va40
      snde "tele"
    endi
  endi
endm

rscr
  lock
  *destructor
  enum 2 2 1018
    kill targ
  next
  scrx 2 2 1018 1
  scrx 2 2 1018 9
  scrx 2 2 1018 1000

  enum 2 21 1102
    kill targ
  next
  scrx 2 21 1102 1
  scrx 2 21 1102 1000

  enum 3 2 1003
    kill targ
  next
  scrx 3 2 1003 10
  scrx 3 2 1003 1000
  scrx 3 2 1003 1001
  scrx 3 2 1003 1002
  scrx 3 2 1003 1003
  scrx 3 2 1003 1004
  scrx 3 2 1003 1005
  scrx 3 2 1003 1006
  scrx 3 2 1003 1007
  scrx 3 2 1003 1008
  scrx 3 2 1003 1009
  scrx 3 2 1003 1010
  scrx 3 2 1003 1011
  scrx 3 2 1003 1012
  scrx 3 2 1003 1020
  scrx 3 2 1003 1021
  scrx 3 2 1003 1022
  scrx 3 2 1003 1023
  scrx 3 2 1003 1024

  enum 3 9 1008
  kill targ
  next
  scrx 3 9 1008 1
  scrx 3 9 1008 9
  scrx 3 9 1008 1000
endm
